"""field the model user were updated

Revision ID: 438e153d77e5
Revises: 18eb97840ce5
Create Date: 2024-11-03 03:46:36.864760

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = '438e153d77e5'
down_revision = '18eb97840ce5'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.alter_column('password_hash',
               existing_type=mysql.VARCHAR(length=550),
               type_=sa.String(length=255),
               existing_nullable=False)
        batch_op.alter_column('name',
               existing_type=mysql.VARCHAR(length=30),
               type_=sa.String(length=255),
               existing_nullable=False)
        batch_op.alter_column('last_name',
               existing_type=mysql.VARCHAR(length=70),
               type_=sa.String(length=255),
               existing_nullable=False)
        batch_op.alter_column('birth_day',
               existing_type=sa.DATE(),
               type_=sa.String(length=255),
               existing_nullable=True)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.alter_column('birth_day',
               existing_type=sa.String(length=255),
               type_=sa.DATE(),
               existing_nullable=True)
        batch_op.alter_column('last_name',
               existing_type=sa.String(length=255),
               type_=mysql.VARCHAR(length=70),
               existing_nullable=False)
        batch_op.alter_column('name',
               existing_type=sa.String(length=255),
               type_=mysql.VARCHAR(length=30),
               existing_nullable=False)
        batch_op.alter_column('password_hash',
               existing_type=sa.String(length=255),
               type_=mysql.VARCHAR(length=550),
               existing_nullable=False)

    # ### end Alembic commands ###
